#include <stdio.h>
#define MAX 30

int sorted[MAX];
int size;

void merge(int a[], int m, int middle, int n) {
	int i = m, j = middle + 1, k = m;

	while (i <= middle && j <= n) { //두개의 부분집합중의 원소를 하나씩 비교해서 삽입
		if (a[i] <= a[j]) {
			sorted[k++] = a[i++];
		}
		else {
			sorted[k++] = a[j++];
		}
	}

	if (i > middle) {
		for (int t = j; t <= n; t++, k++) {
			sorted[k] = a[t];
		}
	}
	else {
		for (int t = i; t <= middle; t++, k++) {
			sorted[k] = a[t];
		}
	}

	for (int t = m; t <= n; t++) {
		a[t] = sorted[t];
	}

	printf("\n 병합 정렬 >> ");
	for (int t = 0; t < size; t++) {
		printf("%4d ", a[t]);
	}
}

void mergeSort(int a[], int m, int n) {
	int middle;
	if (m < n) {
		middle = (m + n) / 2;

		mergeSort(a, m, middle);
		mergeSort(a, middle + 1, n);
		merge(a, m, middle, n);
	}
}

int main() {

	int list[8] = { 69, 10, 30, 2, 16, 8, 31, 22 };
	size = sizeof(list) / sizeof(list[0]);
	printf("\n 정렬할 원소\n");
	for (int i = 0; i < size; i++) {
		printf("%3d", list[i]);
	}
	printf("\n병합정렬수행\n");
	mergeSort(list, 0, size - 1);

	return 0;
}

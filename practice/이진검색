#include <stdio.h>

int num[100];

void quicksort(int L, int R) {

	int left = L;
	int right = R;
	int pivot = num[((L + R) / 2)];
	int room = 0;

	do {
		while (num[left] < pivot) left++;

		while (num[right] > pivot) right--;

		if (left <= right) {
			room = num[left];
			num[left] = num[right];
			num[right] = room;
			left++;
			right--;
		}

	} while (left <= right);

	if (L < right) quicksort(L, right);

	if (left < R) quicksort(left, R);

}

int search(int N, int key){
	
	int start = 0;
	int last = N - 1;
	
	do{
		int med = (start + last) / 2;
		if(num[med] == key) return med;
		else if(num[med] > key){
			last = med - 1;
		}
		else if(num[med] < key){
			start = med + 1;
		}
	} while(start <= last);
	
	return -1;
}

int main(void){

	int N = 0;
	int key = 0;
	
	scanf("%d", &N);
	
	for(int i = 0; i < N; i++){
		scanf("%d", &num[i]);
	}
	
	printf("찾으려는 수: ");
	scanf("%d", &key);
	
	quicksort(0, (N - 1));
	
	int result = search(N, key);
	
	if(result == -1) printf("수가 없습니다\n");
	else printf("수는 num[%d]에 있습니다\n", result);
	
	return 0;
}

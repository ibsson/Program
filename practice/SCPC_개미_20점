#include <stdio.h>

int arr[300020] = {0};
int arr2[300020] = {0};

int location1[300020] = {0};
int location2[300020] = {0};
int location3[300020] = {0};

#define swap_1(a, b) ( (a) ^= (b) ^= (a) ^= (b))

void merge(int left, int mid, int right) {

  int i = left, j = mid+1, k = left;
    while (i <= mid && j <= right) { //주어진 범위 안에서
        if (arr[i] <= arr[j]) {
            arr2[k++] = arr[i++];
			k--;
			i--;
			location2[k++] = location1[i++];
		}
        else{
            arr2[k++] = arr[j++];
			k--;
			j--;
			location2[k++] = location1[j++];
		}
        //현재 자기 값보다 작은 값들을 먼저 넣어놓고
    }
    
    while (i <= mid){
        arr2[k++] = arr[i++];
		k--;
		i--;
		location2[k++] = location1[i++];
	}
    while (j <= right){
        arr2[k++] = arr[j++];
		k--;
		j--;
		location2[k++] = location1[j++];
	}
    //남은 값들다 채우기.
  
    for (int i = left; i <= right; i++) {
        arr[i] = arr2[i];
		location1[i] = location2[i];
    }
  
}

void mergeSort( int left, int right) {
  
  if(left < right) {
      int mid = (left + right) / 2;
      
      mergeSort(left, mid);
      mergeSort( mid+1, right);
      merge(left, mid, right);
  }
    
}

int main(){
	
	int T, N = 0;
	int sum = 0;

	scanf("%d", &T);
	
	for(int i = 1; i <= T; i++){
		
		sum = 0;
		
		scanf("%d", &N);
		
		for(int k = 0; k < N; k++){
			scanf("%d", &location1[k]);
			location3[k] = location1[k];
		}
		
		for(int k = 0; k < N; k++){
			scanf("%d", &arr[k]);
		}
		
		mergeSort(0, (N - 1));
		
		for(int k = 0; k < N; k++){
			if(location3[k] < location1[k]){
				swap_1(location3[k], location1[k]);
			}
			
			sum += (location3[k] - location1[k]);
		}
		
		printf("Case #%d\n", i);
		printf("%d\n", sum);
	}
	
	return 0;
}

#include <stdio.h>

void Swap(int* A, int* B) {

	int tmp = *A;
	*A = *B;
	*B = tmp;
}

int Partition(int data[], int Left, int Right) {

	int First = Left;
	int Pivot = data[First];

	Left++;

	while (Left <= Right) {
		while (data[Left] <= Pivot && Left < Right) {
			Left++;
		}
		while (data[Right] >= Pivot && Left <= Right) {
			Right--;
		}

		if (Left < Right) Swap(&data[Left], &data[Right]);
		else break;
	}

	Swap(&data[First], &data[Right]);

	return Right;
}

void QuickSort(int data[], int Left, int Right) {
	
	if (Left < Right) {
		int Index = Partition(data, Left, Right);

		QuickSort(data, Left, (Index - 1));
		QuickSort(data, (Index + 1), Right);
	}
}

int main(void) {

	int data[] = { 5, 1, 6, 4, 8, 3, 7, 9, 2 };
	int len = sizeof(data) / sizeof(data[0]);

	QuickSort(data, 0, (len - 1));

	for (int i = 0; i < len; i++) {
		printf("%d ", data[i]);
	}

	printf("\n");

	return 0;
}

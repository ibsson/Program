#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct Node {
    int Data;
    int Index;
} Node;

void merge(Node* array, int left, int mid, int right) {
    int n1 = mid - left + 1;
    int n2 = right - mid;

    Node* L = (Node*)malloc(n1 * sizeof(Node));
    Node* R = (Node*)malloc(n2 * sizeof(Node));

    for (int i = 0; i < n1; i++)
        L[i] = array[left + i];
    for (int i = 0; i < n2; i++)
        R[i] = array[mid + 1 + i];

    int i = 0, j = 0, k = left;

    while (i < n1 && j < n2) {
        if (L[i].Data <= R[j].Data) {
            array[k] = L[i];
            i++;
        }
        else {
            array[k] = R[j];
            j++;
        }
        k++;
    }

    while (i < n1) {
        array[k] = L[i];
        i++;
        k++;
    }

    while (j < n2) {
        array[k] = R[j];
        j++;
        k++;
    }

    free(L);
    free(R);
}

void mergeSort(Node* array, int left, int right) {
    if (left < right) {
        int mid = left + (right - left) / 2;

        mergeSort(array, left, mid);
        mergeSort(array, mid + 1, right);

        merge(array, left, mid, right);
    }
}

int main(void) {
    int T = 0, N = 0;

    scanf("%d", &T);

    for (int i = 1; i <= T; i++) {
        scanf("%d", &N);

        Node* ant = (Node*)malloc(sizeof(Node) * N);
        int* Original_Index = (int*)malloc(sizeof(int) * N);

        for (int j = 0; j < N; j++) {
            scanf("%d", &ant[j].Index);
            Original_Index[j] = ant[j].Index;
        }

        for (int j = 0; j < N; j++) {
            scanf("%d", &ant[j].Data);
        }

        mergeSort(ant, 0, N - 1);

        long long int cnt = 0;

        for (int j = 0; j < N; j++) {
            cnt += abs(ant[j].Index - Original_Index[j]);
        }

        printf("Case #%d\n", i);
        printf("%lld\n", cnt);

        free(ant);
        free(Original_Index);
    }

    return 0;
}

/* 
계속 헤매다가 long long int 한번에 해결된 문제였다.
나에게 2년전 수많은 절망을 안겨줬던 문제, 하지만 그만큼 배운것도 가장 많았던 문제.
정렬에 대한 개념과 변수 자료형의 중요성까지 배울 수 있던 문제다.
앞으로 문제를 풀기 전에 변수 설정을 정말 잘해야겠다는 생각이 많이 들었다.
이제부터 항상 문제를 풀기 전에 변수 설정을 하고 문제를 풀도록 해야겠다.
*/

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int main(void) {

	int N = 0, M = 0;

	scanf("%d %d", &N, &M);

	getchar(); //입력 버퍼에 '\0'제거, getchar함수를 쓰면 scanf사용 이후 입력 버퍼에 남아있는 '\0'을 가져와서 입력 버퍼를 비울 수 있다.

	char** num = (char**)malloc(sizeof(char*) * N);
	for (int i = 0; i < N; i++) {
		num[i] = (char*)malloc(sizeof(char) * (M + 1));
	}

	for (int i = 0; i < N; i++) {
		fgets(num[i], (M + 1), stdin);
		num[i][M] = '\0';
		getchar();
	}

	int max = 1;

	for (int i = 0; i < N; i++) {
		for (int j = 0; j < M; j++) {
			int k = 1;

			while ((i + k) < N && (j + k) < M) {
				if (num[i + k][j] == num[i][j] && num[i][j + k] == num[i][j] && num[i + k][j + k] == num[i][j]) {
					if (max < (k + 1) * (k + 1)) {
						max = (k + 1) * (k + 1);
					}
				}

				k++;
			}
		}
	}

	printf("%d\n", max);

	for (int i = 0; i < N; i++) {
		free(num[i]);
	}
	free(num);

	return 0;
}

/*
이 문제의 접근 방식은 이랬다.

1. 배열에 수를 모두 입력
2. 한 점 고정 후 꼭짓점 숫자가 모두 같으면 넓이 저장
3. 한칸씩 늘려가며 반복 후 배열의 크기를 넘어가면 다음 점으로 가서 2번 반복

이 방법으로 구현은 잘 해냈는데 입력 자체가 안되는 문제가 발생했다.
scanf로 입력 후 fgets로 입력을 해도 배열에 저장이 안되는 것이었다.
원인은 입력버퍼를 비우지 않은것에 있었다. 

https://marell.tistory.com/1 설명 링크

scanf에 입력을 하면 변수에 값이 저장되기 전에 입력버퍼에 먼저 그 값이 쓰여지게 된다. scanf에 수를 입력 하면 입력버퍼에는 3\0 과 같이 저장되는데
입력된 3은 변수에 저장되고 입력버퍼에는 char타입 '\0'만 남게 된다. 만약 다음에 입력받는 연산자가 char 타입이라면 이 변수는 추가적인 입력 없이 입력버퍼에 남아있는 \0을
저장하게 된다. 그래서 입력이 되지 않았다. 그래서 getchar()함수를 쓰면 입력버퍼의 \0을 가져온다는 사실을 알게되어서 써봤더니 바로 문제가 풀렸다.
  
이 함수에 대해서는 조금 더 공부를 해봐야겠다. 그리고 입력버퍼에 대한 이해도 생겼다.
앞으로 scanf로 입력 후 char형으로 받게 된다면 입력버퍼를 비우는 것을 항상 신경써야겠다.
*/

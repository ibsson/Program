#include <iostream>
using namespace std;

int dp[100001][3];

int main(void) {

	int N = 0, mod = 9901;

	cin >> N;

	dp[1][0] = 1, dp[1][1] = 1, dp[1][2] = 1;

	for (int i = 2; i <= N; i++) {
		dp[i][0] = (dp[i - 1][0] + dp[i - 1][1] + dp[i - 1][2]) % mod;
		dp[i][1] = (dp[i - 1][0] + dp[i - 1][2]) % mod;
		dp[i][2] = (dp[i - 1][0] + dp[i - 1][1]) % mod;
	}

	cout << (dp[N][0] + dp[N][1] + dp[N][2]) % mod << endl;

	return 0;
}

/*
N번째에 위치하는 사자의 경우의 수는
1. 하나도 없을때
2. 왼쪽에 있을때
3. 오른쪽에 있을때

이렇게 나눌 수 있다. 
1인 경우에는 N-1번째에 1, 2, 3이 가능하고
2인 경우에는 N-1번째에 1, 3이 가능,
3인 경우에는 N-1번째에 1, 2가 가능하다.
이것을 바탕으로 점화식을 만들었다.

도저히 풀리지가 않아서 찾아서 풀었다.
이런 점화식을 스스로 생각해내기 위해 더 노력해야겠다.
*/
